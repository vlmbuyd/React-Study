{"ast":null,"code":"const BASE_URL = \"https://learn.codeit.kr/api/codestudit\";\nexport async function getPosts(page = 0, limit = 10) {\n  const response = await fetch(`${BASE_URL}/posts?page=${page}&limit=${limit}`);\n  return await response.json();\n}\nexport async function getPostsByUsername(username) {\n  const response = await fetch(`${BASE_URL}/posts?username=${username}`);\n  return await response.json();\n}\nexport async function uploadPost(newPost) {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newPost)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to upload the post.\");\n  }\n  return await response.json();\n}\nexport async function getUserInfo(username) {\n  const response = await fetch(`${BASE_URL}/users/${username}`);\n  return await response.json();\n}","map":{"version":3,"names":["BASE_URL","getPosts","page","limit","response","fetch","json","getPostsByUsername","username","uploadPost","newPost","method","headers","body","JSON","stringify","ok","Error","getUserInfo"],"sources":["D:/STUDY/FE/React-Study/tanstack-query practice/src/api.js"],"sourcesContent":["const BASE_URL = \"https://learn.codeit.kr/api/codestudit\";\n\nexport async function getPosts(page = 0, limit = 10) {\n  const response = await fetch(`${BASE_URL}/posts?page=${page}&limit=${limit}`);\n  return await response.json();\n}\n\nexport async function getPostsByUsername(username) {\n  const response = await fetch(`${BASE_URL}/posts?username=${username}`);\n  return await response.json();\n}\n\nexport async function uploadPost(newPost) {\n  const response = await fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(newPost),\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to upload the post.\");\n  }\n\n  return await response.json();\n}\n\nexport async function getUserInfo(username) {\n  const response = await fetch(`${BASE_URL}/users/${username}`);\n  return await response.json();\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,wCAAwC;AAEzD,OAAO,eAAeC,QAAQA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,eAAcE,IAAK,UAASC,KAAM,EAAC,CAAC;EAC7E,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeC,kBAAkBA,CAACC,QAAQ,EAAE;EACjD,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,mBAAkBQ,QAAS,EAAC,CAAC;EACtE,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeG,UAAUA,CAACC,OAAO,EAAE;EACxC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAO,EAAE;IAChDW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EAEF,IAAI,CAACN,QAAQ,CAACY,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,OAAO,MAAMb,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeY,WAAWA,CAACV,QAAQ,EAAE;EAC1C,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,UAASQ,QAAS,EAAC,CAAC;EAC7D,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}