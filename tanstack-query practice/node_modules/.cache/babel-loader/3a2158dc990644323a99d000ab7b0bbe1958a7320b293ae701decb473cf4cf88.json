{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\FE\\\\React-Study\\\\tanstack-query practice\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getPosts, uploadPost, getUserInfo } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  var _postsData$results;\n  const [content, setContent] = useState(\"\");\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n  const queryClient = useQueryClient();\n  const {\n    data: postsData,\n    isPending,\n    isError\n  } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: getPosts,\n    retry: 0\n  });\n  const {\n    data: userInfoData,\n    isPending: isUserInfoPending\n  } = useQuery({\n    queryKey: [\"userInfo\"],\n    queryFn: () => getUserInfo(currentUsername),\n    enabled: !!currentUsername,\n    onSuccess: () => {\n      console.log(userInfoData);\n    }\n  });\n  const uploadPostMutation = useMutation({\n    mutationFn: newPost => uploadPost(newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"posts\");\n    }\n  });\n  const handleLoginButtonClick = () => {\n    setCurrentUsername(\"codeit\");\n  };\n  const handleInputChange = e => {\n    setContent(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      username: \"codeit\",\n      content\n    };\n    uploadPostMutation.mutate(newPost);\n    setContent(\"\");\n  };\n  const loginMessage = isUserInfoPending ? \"로그인 중입니다...\" : `${userInfoData === null || userInfoData === void 0 ? void 0 : userInfoData.name}님 환영합니다!`;\n  if (isPending) return \"로딩 중입니다...\";\n  if (isError) return \"에러가 발생했습니다.\";\n  const posts = (_postsData$results = postsData === null || postsData === void 0 ? void 0 : postsData.results) !== null && _postsData$results !== void 0 ? _postsData$results : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentUsername ? loginMessage : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginButtonClick,\n        children: \"codeit\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          value: content,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: uploadPostMutation.isPending || !content,\n          type: \"submit\",\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [post.user.name, \": \", post.content]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"6XfnZfDGmzb1wlW/jXNBcVnhtAE=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useState","useMutation","useQuery","useQueryClient","getPosts","uploadPost","getUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","_postsData$results","content","setContent","currentUsername","setCurrentUsername","queryClient","data","postsData","isPending","isError","queryKey","queryFn","retry","userInfoData","isUserInfoPending","enabled","onSuccess","console","log","uploadPostMutation","mutationFn","newPost","invalidateQueries","handleLoginButtonClick","handleInputChange","e","target","value","handleSubmit","preventDefault","username","mutate","loginMessage","name","posts","results","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","type","map","post","user","id","_c","$RefreshReg$"],"sources":["D:/STUDY/FE/React-Study/tanstack-query practice/src/HomePage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getPosts, uploadPost, getUserInfo } from \"./api\";\n\nfunction HomePage() {\n  const [content, setContent] = useState(\"\");\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n\n  const queryClient = useQueryClient();\n\n  const {\n    data: postsData,\n    isPending,\n    isError,\n  } = useQuery({\n    queryKey: [\"posts\"],\n    queryFn: getPosts,\n    retry: 0,\n  });\n\n  const { data: userInfoData, isPending: isUserInfoPending } = useQuery({\n    queryKey: [\"userInfo\"],\n    queryFn: () => getUserInfo(currentUsername),\n    enabled: !!currentUsername,\n    onSuccess: () => {\n      console.log(userInfoData);\n    },\n  });\n\n  const uploadPostMutation = useMutation({\n    mutationFn: (newPost) => uploadPost(newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"posts\");\n    },\n  });\n\n  const handleLoginButtonClick = () => {\n    setCurrentUsername(\"codeit\");\n  };\n\n  const handleInputChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newPost = { username: \"codeit\", content };\n    uploadPostMutation.mutate(newPost);\n    setContent(\"\");\n  };\n\n  const loginMessage = isUserInfoPending\n    ? \"로그인 중입니다...\"\n    : `${userInfoData?.name}님 환영합니다!`;\n\n  if (isPending) return \"로딩 중입니다...\";\n\n  if (isError) return \"에러가 발생했습니다.\";\n\n  const posts = postsData?.results ?? [];\n\n  return (\n    <>\n      <div>\n        {currentUsername ? (\n          loginMessage\n        ) : (\n          <button onClick={handleLoginButtonClick}>codeit으로 로그인</button>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <textarea\n            name=\"content\"\n            value={content}\n            onChange={handleInputChange}\n          />\n          <button\n            disabled={uploadPostMutation.isPending || !content}\n            type=\"submit\"\n          >\n            업로드\n          </button>\n        </form>\n      </div>\n      <div>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.id}>\n              {post.user.name}: {post.content}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}