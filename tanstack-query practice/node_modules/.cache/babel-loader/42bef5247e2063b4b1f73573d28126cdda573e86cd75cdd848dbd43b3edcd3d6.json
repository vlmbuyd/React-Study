{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDY\\\\FE\\\\React-Study\\\\tanstack-query practice\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { keepPreviousData, useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getPosts, uploadPost, getUserInfo } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGE_LIMIT = 3;\nfunction HomePage() {\n  _s();\n  var _postsData$results;\n  const [content, setContent] = useState(\"\");\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n  const queryClient = useQueryClient();\n  const [page, setPage] = useState(0);\n  const {\n    data: postsData,\n    isPending,\n    isError,\n    isPlaceholderData\n  } = useQuery({\n    queryKey: [\"posts\", page],\n    queryFn: () => getPosts(page, PAGE_LIMIT),\n    placeholderData: keepPreviousData\n  });\n  const {\n    data: userInfoData,\n    isPending: isUserInfoPending\n  } = useQuery({\n    queryKey: [\"userInfo\"],\n    queryFn: () => getUserInfo(currentUsername),\n    enabled: !!currentUsername\n  });\n  const uploadPostMutation = useMutation({\n    mutationFn: newPost => uploadPost(newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"posts\");\n    }\n  });\n  const handleLoginButtonClick = () => {\n    setCurrentUsername(\"codeit\");\n  };\n  const handleInputChange = e => {\n    setContent(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      username: \"codeit\",\n      content\n    };\n    uploadPostMutation.mutate(newPost);\n    setContent(\"\");\n  };\n  const loginMessage = isUserInfoPending ? \"로그인 중입니다...\" : `${userInfoData === null || userInfoData === void 0 ? void 0 : userInfoData.name}님 환영합니다!`;\n  if (isPending) return \"로딩 중입니다...\";\n  if (isError) return \"에러가 발생했습니다.\";\n  const posts = (_postsData$results = postsData === null || postsData === void 0 ? void 0 : postsData.results) !== null && _postsData$results !== void 0 ? _postsData$results : [];\n\n  // useEffect(() => {\n  //   if (!isPlaceholderData && postsData?.hasMore) {\n  //     queryClient.prefetchQuery({\n  //       queryKey: [\"posts\", page + 1],\n  //       queryFn: () => getPosts(page + 1, PAGE_LIMIT),\n  //     });\n  //   }\n  // }, [isPlaceholderData, postsData, queryClient, page]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentUsername ? loginMessage : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoginButtonClick,\n        children: \"codeit\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          value: content,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: uploadPostMutation.isPending || !content,\n          type: \"submit\",\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [post.user.name, \": \", post.content]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page === 0,\n          onClick: () => setPage(old => Math.max(old - 1, 0)),\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isPlaceholderData || !(postsData !== null && postsData !== void 0 && postsData.hasMore),\n          onClick: () => setPage(old => old + 1),\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"ZVF4tn70MKNGVM+qVz4VxPwZhsY=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","keepPreviousData","useMutation","useQuery","useQueryClient","getPosts","uploadPost","getUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGE_LIMIT","HomePage","_s","_postsData$results","content","setContent","currentUsername","setCurrentUsername","queryClient","page","setPage","data","postsData","isPending","isError","isPlaceholderData","queryKey","queryFn","placeholderData","userInfoData","isUserInfoPending","enabled","uploadPostMutation","mutationFn","newPost","onSuccess","invalidateQueries","handleLoginButtonClick","handleInputChange","e","target","value","handleSubmit","preventDefault","username","mutate","loginMessage","name","posts","results","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","type","map","post","user","id","old","Math","max","hasMore","_c","$RefreshReg$"],"sources":["D:/STUDY/FE/React-Study/tanstack-query practice/src/HomePage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  keepPreviousData,\n  useMutation,\n  useQuery,\n  useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getPosts, uploadPost, getUserInfo } from \"./api\";\n\nconst PAGE_LIMIT = 3;\n\nfunction HomePage() {\n  const [content, setContent] = useState(\"\");\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n\n  const queryClient = useQueryClient();\n\n  const [page, setPage] = useState(0);\n  const {\n    data: postsData,\n    isPending,\n    isError,\n    isPlaceholderData,\n  } = useQuery({\n    queryKey: [\"posts\", page],\n    queryFn: () => getPosts(page, PAGE_LIMIT),\n    placeholderData: keepPreviousData,\n  });\n\n  const { data: userInfoData, isPending: isUserInfoPending } = useQuery({\n    queryKey: [\"userInfo\"],\n    queryFn: () => getUserInfo(currentUsername),\n    enabled: !!currentUsername,\n  });\n\n  const uploadPostMutation = useMutation({\n    mutationFn: (newPost) => uploadPost(newPost),\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"posts\");\n    },\n  });\n\n  const handleLoginButtonClick = () => {\n    setCurrentUsername(\"codeit\");\n  };\n\n  const handleInputChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newPost = { username: \"codeit\", content };\n    uploadPostMutation.mutate(newPost);\n    setContent(\"\");\n  };\n\n  const loginMessage = isUserInfoPending\n    ? \"로그인 중입니다...\"\n    : `${userInfoData?.name}님 환영합니다!`;\n\n  if (isPending) return \"로딩 중입니다...\";\n\n  if (isError) return \"에러가 발생했습니다.\";\n\n  const posts = postsData?.results ?? [];\n\n  // useEffect(() => {\n  //   if (!isPlaceholderData && postsData?.hasMore) {\n  //     queryClient.prefetchQuery({\n  //       queryKey: [\"posts\", page + 1],\n  //       queryFn: () => getPosts(page + 1, PAGE_LIMIT),\n  //     });\n  //   }\n  // }, [isPlaceholderData, postsData, queryClient, page]);\n\n  return (\n    <>\n      <div>\n        {currentUsername ? (\n          loginMessage\n        ) : (\n          <button onClick={handleLoginButtonClick}>codeit으로 로그인</button>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <textarea\n            name=\"content\"\n            value={content}\n            onChange={handleInputChange}\n          />\n          <button\n            disabled={uploadPostMutation.isPending || !content}\n            type=\"submit\"\n          >\n            업로드\n          </button>\n        </form>\n      </div>\n      <div>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.id}>\n              {post.user.name}: {post.content}\n            </li>\n          ))}\n        </ul>\n        <div>\n          <button\n            disabled={page === 0}\n            onClick={() => setPage((old) => Math.max(old - 1, 0))}\n          >\n            &lt;\n          </button>\n          <button\n            disabled={isPlaceholderData || !postsData?.hasMore}\n            onClick={() => setPage((old) => old + 1)}\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}